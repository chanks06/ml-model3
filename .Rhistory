knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
library(tidyverse)
library(tidytext)
library(caret)
library(fastDummies)
library(randomForest)
# https://www.openml.org/d/1590
options(scipen=999)
raw_income = read_csv("openml_1590.csv", na=c("?"))
knitr::opts_knit$set(root.dir = '~/repos/ml-model3/datasets')
library(tidyverse)
library(tidytext)
library(caret)
library(fastDummies)
library(randomForest)
raw_income = read_csv("openml_1590.csv", na=c("?"))
knitr::opts_knit$set(root.dir = '~/repos/ml-model3')
getwd()
setwd('~/repos/ml-model3/datasets')
getwd()
library(RCurl)
file = 'https://github.com/chanks06/ml-model3/blob/main/datasets/openml_1590.csv'
x = getURL(file)
y = read_csv(text = x)
y = read_csv(x
y = read_csv(x)
y = read_csv(x)
y = read_csv(file)
y
setwd("/Users/charleshanks/repos/ml-model3")
getwd()
knitr::opts_knit$set(root.dir = '/Users/charleshanks/repos/ml-model3')
raw_income = read_csv("/datasets/openml_1590.csv", na=c("?"))
raw_income = read_csv("datasets/openml_1590.csv", na=c("?"))
path = '/Users/charleshanks/repos/ml-model3'
knitr::opts_knit$set(root.dir = normalizePath(path))
knitr::opts_knit$set(root.dir = normalizePath(path))
raw_income = read_csv("/datasets/openml_1590.csv", na=c("?"))
raw_income = read_csv('/datasets/openml_1590.csv', na=c("?"))
raw_income = read_csv('datasets/openml_1590.csv', na=c("?"))
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
knitr::opts_knit$set(root.dir = '/Users/charleshanks/repos/ml-model3')
library(tidyverse)
library(tidytext)
library(caret)
library(fastDummies)
library(randomForest)
library(RCurl)
# https://www.openml.org/d/1590
options(scipen=999)
raw_income = read_csv('datasets/openml_1590.csv', na=c("?"))
income = read_csv("openml_1590.csv", na=c("?")) %>%
drop_na() %>%
mutate(income_above_50k = class==">50K") %>%
select(-class) %>%
dummy_cols(remove_selected_columns = T)
raw_income = read_csv('datasets/openml_1590.csv', na=c("?"))
income = read_csv("datasets/openml_1590.csv", na=c("?")) %>%
drop_na() %>%
mutate(income_above_50k = class==">50K") %>%
select(-class) %>%
dummy_cols(remove_selected_columns = T)
View(income)
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
knitr::opts_knit$set(root.dir = '/Users/charleshanks/repos/ml-model3')
library(tidyverse)
library(tidytext)
library(caret)
library(fastDummies)
library(randomForest)
library(RCurl)
# https://www.openml.org/d/1590
#preventing scientific notation for numerical outputs
options(scipen=999)
library(skimr)
skim(income)
ggplot(income, aes(x = `capital-loss`)) + geom_histogram()
#I should log capital-gain and capital-loss
#definition: capital gain refers to the increase in the value of a capital asset when it is sold. A capital gain occurs when you sell an asset for more than what you originally paid for it.
income = income %>% mutate(l_capital_gain = log(`capital-gain`),
l_capital_loss = log(`capital-loss`)) %>%
select(-`capital-gain`,-`capital-loss`)
#moving these cols back to front of dummy cols:
income = income %>% relocate(l_capital_gain, l_capital_loss)
#I can't deal with these hyphens:
income = income %>% rename_all(funs(str_replace_all(.,"-","_"))) %>%
rename_all(funs(tolower(.)))
#what is education_num?
#is NA retired? Unemployed?
raw_income %>% ggplot(aes(x = age, fill = occupation)) + geom_histogram() + facet_wrap(~occupation)
#military is a younger person's occupation
#exec-manegerial is very normally distributed
raw_income %>%
group_by(occupation,sex) %>%
count() %>%
ggplot(aes(x = occupation, y = n, fill = sex)) + geom_col() + coord_flip()
raw_income %>% group_by(education, workclass) %>% count() %>% ggplot(aes(x = n, y = education, fill = workclass)) + geom_col()
raw_income %>% group_by(relationship) %>% summarize(avg_age= mean(age))
raw_income %>% group_by(sex) %>% count()
#there are twice as many men in this dataset....may need to downsample by gender later in the game. This may lead to implicit bias toward men making more than 50k in the model.
raw_income %>% group_by(sex, relationship) %>% count()
#there is 1 female husband, look like this dataset does not take into account the difference between gender and sex
pr_income = prcomp(x = select(income,-class), scale = T, center = T)
income
pr_income = prcomp(x = select(income,-income_above_50k), scale = T, center = T)
income
income
income
pr_income = prcomp(x = select(income,-income_above_50k), scale = T, center = T)
income
income %>% mutate(l_capital_gain = ifelse(l_capital_gain == '-Inf', 0, l_capital_gain))
income = income %>% mutate(l_capital_gain = ifelse(l_capital_gain == '-Inf', 0, l_capital_gain),
l_capital_loss = ifelse(l_capital_loss == '-Inf', 0, l_capital_loss))
income
income = read_csv("datasets/openml_1590.csv", na=c("?")) %>%
drop_na() %>%
mutate(income_above_50k = class==">50K") %>%
select(-class) %>%
dummy_cols(remove_selected_columns = T)
income = income %>% mutate(l_capital_gain = log(`capital-gain`),
l_capital_loss = log(`capital-loss`)) %>%
select(-`capital-gain`,-`capital-loss`)
#moving these cols back to front of dummy cols:
income = income %>% relocate(l_capital_gain, l_capital_loss)
income
income = income %>% mutate(l_capital_gain = ifelse(l_capital_gain == '-Inf', 0, l_capital_gain),
l_capital_loss = ifelse(l_capital_loss == '-Inf', 0, l_capital_loss))
income
income = income %>% rename_all(funs(str_replace_all(.,"-","_"))) %>%
rename_all(funs(tolower(.)))
income
pr_income = prcomp(x = select(income,-income_above_50k), scale = T, center = T)
summary(pr_income)
screeplot(pr_income, type = "lines")
biplot(pr_income)
pr_income$rotation
head(pr_income$x)
rownames_to_column(as.data.frame(pr_income$rotation)) %>%
select(1:5) %>%
filter(abs(PC1) >= 0.2 | abs(PC2) >= 0.2 | abs(PC3) >= 0.2 | abs(PC4) >= 0.2)
rownames_to_column(as.data.frame(pr_income$rotation)) %>%
select(1:6) %>%
filter(abs(PC1) >= 0.2 | abs(PC2) >= 0.2 | abs(PC3) >= 0.2 | abs(PC4) >= 0.2 | abs(PC5) >= 0.2)
prc = bind_cols(select(income, income_above_50k), as.data.frame(pr_income$x)) %>%
select(1:6) %>%
rename("married_men" = PC1, "uneducated" = PC2, "pac_isl_immigrants" = PC3, "young_single"= PC4, "latinx_immigrants" = PC5)
prc
prc %>%
pivot_longer(cols = -income_above_50k, names_to = "component", values_to = "loading") %>% mutate(income_above_50k = as.factor(income_above_50k)) %>%
ggplot(aes(loading, fill=income_above_50k)) +
geom_density(alpha = 0.5) +
facet_grid(.~component)
rownames_to_column(as.data.frame(pr_income$rotation)) %>%
select(1:6) %>%
filter(abs(PC1) >= 0.3 | abs(PC2) >= 0.3 | abs(PC3) >= 0.3 | abs(PC4) >= 0.3 | abs(PC5) >= 0.3)
rownames_to_column(as.data.frame(pr_income$rotation)) %>%
select(1:6) %>%
filter(abs(PC1) >= 0.2 | abs(PC2) >= 0.2 | abs(PC3) >= 0.2 | abs(PC4) >= 0.2 | abs(PC5) >= 0.2)
prc = bind_cols(select(income, income_above_50k), as.data.frame(pr_income$x)) %>%
select(1:6) %>%
rename("married_men" = PC1, "uneducated" = PC2, "pac_isl_immigrants" = PC3, "young_single"= PC4, "mexican_immigrants" = PC5)
prc %>%
pivot_longer(cols = -income_above_50k, names_to = "component", values_to = "loading") %>% mutate(income_above_50k = as.factor(income_above_50k)) %>%
ggplot(aes(loading, fill=income_above_50k)) +
geom_density(alpha = 0.5) +
facet_grid(.~component)
prc
ctrl <- trainControl(method = "cv", number = 3, classProbs=TRUE, summaryFunction = twoClassSummary)
income_index <- createDataPartition(income$income_above_50k, p = 0.80, list = FALSE)
ctrl <- trainControl(method = "cv", number = 3, classProbs=TRUE, summaryFunction = twoClassSummary)
prc_index <- createDataPartition(prc$income_above_50k, p = 0.80, list = FALSE)
train <- prc[ prc_index, ]
test <- prc[-prc_index, ]
train
model.pca =train(income_above_50k ~ .,
data = train,
method = "rf",
metric = "Kappa",
trControl = ctrl)
prc %>% mutate(income_above_50k = as.factor(income_above_50k))
prc = prc %>% mutate(income_above_50k = as.factor(income_above_50k))
ctrl <- trainControl(method = "cv", number = 3, classProbs=TRUE, summaryFunction = twoClassSummary)
prc_index <- createDataPartition(prc$income_above_50k, p = 0.80, list = FALSE)
train <- prc[ prc_index, ]
test <- prc[-prc_index, ]
model.pca =train(income_above_50k ~ .,
data = train,
method = "rf",
metric = "Kappa",
trControl = ctrl)
prc
prc = prc %>% mutate(income_above_50k = as.factor(income_above_50k))
ctrl <- trainControl(method = "cv", number = 3, classProbs=TRUE, summaryFunction = twoClassSummary)
prc_index <- createDataPartition(prc$income_above_50k, p = 0.80, list = FALSE)
train <- prc[ prc_index, ]
test <- prc[-prc_index, ]
model.pca =train(income_above_50k ~ .,
data = train,
method = "rf",
metric = "Kappa",
trControl = ctrl)
prc = bind_cols(select(income, income_above_50k), as.data.frame(pr_income$x)) %>%
select(1:6) %>%
rename("married_men" = PC1, "uneducated" = PC2, "pac_isl_immigrants" = PC3, "young_single"= PC4, "mexican_immigrants" = PC5)
prc %>%
pivot_longer(cols = -income_above_50k, names_to = "component", values_to = "loading") %>% mutate(income_above_50k = as.factor(income_above_50k)) %>%
ggplot(aes(loading, fill=income_above_50k)) +
geom_density(alpha = 0.5) +
facet_grid(.~component)
prc = prc %>% mutate(income_above_50k = as.factor(income_above_50k))
ctrl <- trainControl(method = "cv", number = 3, classProbs=TRUE, summaryFunction = twoClassSummary)
prc_index <- createDataPartition(prc$income_above_50k, p = 0.80, list = FALSE)
train <- prc[ prc_index, ]
test <- prc[-prc_index, ]
model.pca =train(income_above_50k ~ .,
data = train,
method = "rf",
metric = "Kappa",
trControl = ctrl)
?makes.names
library(tidyverse)
library(caret)
library(pROC)
library(MLmetrics)
library(fastDummies)
library(skimr)
knitr::opts_chunk$set(echo = TRUE)
churn
library(tidyverse)
library(caret)
library(pROC)
library(MLmetrics)
library(fastDummies)
library(skimr)
knitr::opts_chunk$set(echo = TRUE)
bank <-readRDS(gzcon(url("https://github.com/karolo89/Raw_Data/raw/main/BankChurners.rds")))
bank = bank %>% rename_all(funs(tolower(.)))
skim(bank)
bank = bank %>% mutate(churn = as.factor(churn))
#what percentage of customers churn?
bank %>% group_by(churn) %>% count() %>% mutate(freq = n/nrow(bank))
#16% of customers churn
bank %>% filter(churn == 1) %>% ggplot(aes(x = credit_limit)) + geom_histogram(bins = 4)
#majority of churners have credit limit under %5000, some are even negative...
bank %>% group_by(churn) %>% summarize(avg_age = mean(customer_age), avg_credit_limit = mean(credit_limit), avg_total_trans_amt = mean(total_trans_amt), avg_util_ratio = mean(avg_utilization_ratio))
#churners average credit utilization ratio is about half of the non churners...they are weening of their credit usage.
bank %>% ggplot(aes(x = total_trans_amt)) + geom_histogram(aes(fill = churn))
#churners have generally less transaction amount
bank %>% filter(churn == "yes") %>% ggplot(aes(customer_age))
bank %>% ggplot(aes(x = total_trans_ct)) + geom_histogram(aes(fill=churn))
#most churners have a total_trans_ct less than 50
variables = bank %>% select(-churn) %>% colnames()
bank %>% ggplot(aes(x = customer_age)) + geom_histogram(aes(fill=churn))
bank %>% filter(churn == "yes") %>% ggplot(aes(x = total_revolving_bal)) + geom_histogram(aes(fill=churn))
bank %>% ggplot(aes(x = customer_age, y = total_revolving_bal)) + geom_point(aes(color = churn))
#people who churn have a total revolving balance greater than 0 and less than
bank %>% mutate(trb_less_500 = (total_revolving_bal > 0) & (total_revolving_bal <=500)) %>% select(trb_less_500, churn) %>% group_by(trb_less_500, churn) %>% count()
bank = bank %>% mutate(churn = as.factor(churn))
bank2 = bank %>% select(-churn) %>% dummy_cols(remove_selected_columns = T)
bank3 = cbind(bank2, select(bank,churn))
pr_bank = prcomp(x = select(bank3,-churn), scale = T, center = T)
summary(pr_bank)
screeplot(pr_bank, type = "lines")
head(pr_bank$rotation)
rownames_to_column(as.data.frame(pr_bank$rotation)) %>%
select(1:5) %>%
filter(abs(PC1) >= 0.3 | abs(PC2) >= 0.3 | abs(PC3) >= 0.3 | abs(PC4) >= 0.3)
prc = bind_cols(select(bank3, churn), as.data.frame(pr_bank$x)) %>%
select(1:5) %>%
rename("rich_men" = PC1, "cheap_men" = PC2, "young_spenders" = PC3, "old_spenders"= PC4)
#based on the graph below, "young spenders" and "old spenders" seem to be the most predictive of whether the customer will churn.
prc %>%
pivot_longer(cols = -churn, names_to = "component", values_to = "loading") %>% mutate(churn = as.factor(churn)) %>%
ggplot(aes(loading, fill=churn)) +
geom_density(alpha = 0.5) +
facet_grid(.~component)
ctrl <- trainControl(method = "cv", number = 3, classProbs=TRUE, summaryFunction = twoClassSummary)
bank_index <- createDataPartition(bank$churn, p = 0.80, list = FALSE)
train <- bank[ bank_index, ]
test <- bank[-bank_index, ]
big_model =train(churn ~ .,
data = train,
method = "rf",
tunelength = 4,
metric = "ROC",
trControl = ctrl)
importance = varImp(big_model)
plot(importance)
#most important variables are total_trans_ct, total_trans_amt, total_revolving_bal, total_ct_chng_q4_41, total_relationship_count
model.pca =train(income_above_50k ~ .,
data = train,
method = "rf",
metric = "ROC",
trControl = ctrl)
train
prc_index <- createDataPartition(prc$income_above_50k, p = 0.80, list = FALSE)
prc = bind_cols(select(income, income_above_50k), as.data.frame(pr_income$x)) %>%
select(1:6) %>%
rename("married_men" = PC1, "uneducated" = PC2, "pac_isl_immigrants" = PC3, "young_single"= PC4, "mexican_immigrants" = PC5)
prc
ctrl <- trainControl(method = "cv", number = 3, classProbs=TRUE, summaryFunction = twoClassSummary)
prc_index <- createDataPartition(prc$income_above_50k, p = 0.80, list = FALSE)
prc_index
train <- prc[prc_index, ]
train
test <- prc[-prc_index, ]
model.pca =train(income_above_50k ~ .,
data = train,
method = "rf",
metric = "ROC",
trControl = ctrl)
prc = prc %>% mutate(income_above_50k = as.factor(income_above_50k))
ctrl <- trainControl(method = "cv", number = 3, classProbs=TRUE, summaryFunction = twoClassSummary)
prc_index <- createDataPartition(prc$income_above_50k, p = 0.80, list = FALSE)
train <- prc[prc_index, ]
test <- prc[-prc_index, ]
prc$income_above_50k
model.pca =train(income_above_50k ~ .,
data = train,
method = "rf",
metric = "ROC",
trControl = ctrl)
prc$income_above_50k
prc = prc %>% mutate(income_above_50k = ifelse(income_above_50 == "TRUE",1,0))
prc = prc %>% mutate(income_above_50k = ifelse(income_above_50k == "TRUE",1,0))
prc
ctrl <- trainControl(method = "cv", number = 3, classProbs=TRUE, summaryFunction = twoClassSummary)
prc_index <- createDataPartition(prc$income_above_50k, p = 0.80, list = FALSE)
train <- prc[prc_index, ]
test <- prc[-prc_index, ]
model.pca =train(income_above_50k ~ .,
data = train,
method = "rf",
metric = "ROC",
trControl = ctrl)
ctrl <- trainControl(method = "cv", number = 3, classProbs=TRUE, summaryFunction = twoClassSummary)
prc_index <- createDataPartition(prc$income_above_50k, p = 0.80, list = FALSE)
train <- prc[prc_index, ]
test <- prc[-prc_index, ]
model.pca =train(income_above_50k ~ .,
data = train,
method = "rf",
metric = "ROC",
trControl = ctrl)
model.pca =train(income_above_50k ~ .,
data = train,
method = "rf",
metric = "Kappa",
trControl = ctrl)
prc = prc %>% mutate(income_above_50k = ifelse(income_above_50k == "TRUE",1,0))
ctrl <- trainControl(method = "cv", number = 3)
prc_index <- createDataPartition(prc$income_above_50k, p = 0.80, list = FALSE)
prc_index <- createDataPartition(prc$income_above_50k, p = 0.80, list = FALSE)
prc
prc = bind_cols(select(income, income_above_50k), as.data.frame(pr_income$x)) %>%
select(1:6) %>%
rename("married_men" = PC1, "uneducated" = PC2, "pac_isl_immigrants" = PC3, "young_single"= PC4, "mexican_immigrants" = PC5)
ctrl <- trainControl(method = "cv", number = 3)
prc_index <- createDataPartition(prc$income_above_50k, p = 0.80, list = FALSE)
train <- prc[prc_index, ]
test <- prc[-prc_index, ]
train
model.pca =train(income_above_50k ~ .,
data = train,
method = "rf",
metric = "ROC",
trControl = ctrl)
prc
prc = prc %>% mutate(income_above_50k = as.factor(income_above_50k))
ctrl <- trainControl(method = "cv", number = 3)
prc_index <- createDataPartition(prc$income_above_50k, p = 0.80, list = FALSE)
train <- prc[prc_index, ]
test <- prc[-prc_index, ]
model.pca =train(income_above_50k ~ .,
data = train,
method = "rf",
metric = "ROC",
trControl = ctrl)
prc = prc %>% mutate(income_above_50k = as.factor(income_above_50k))
ctrl <- trainControl(method = "cv", number = 3, classProbs = TRUE)
prc_index <- createDataPartition(prc$income_above_50k, p = 0.80, list = FALSE)
train <- prc[prc_index, ]
test <- prc[-prc_index, ]
model.pca =train(income_above_50k ~ .,
data = train,
method = "rf",
metric = "ROC",
trControl = ctrl)
prc = prc %>% mutate(income_above_50k = factor(income_above_50k, levels = make.names(levels(income_above_50k))))
prc
prc = prc %>% mutate(income_above_50k = factor(income_above_50k, levels = c("TRUE", "FALSE")))
prc
prc = bind_cols(select(income, income_above_50k), as.data.frame(pr_income$x)) %>%
select(1:6) %>%
rename("married_men" = PC1, "uneducated" = PC2, "pac_isl_immigrants" = PC3, "young_single"= PC4, "mexican_immigrants" = PC5)
prc = prc %>% mutate(income_above_50k = factor(income_above_50k, levels = c("TRUE", "FALSE")))
prc
ctrl <- trainControl(method = "cv", number = 3, classProbs = TRUE)
prc_index <- createDataPartition(prc$income_above_50k, p = 0.80, list = FALSE)
train <- prc[prc_index, ]
test <- prc[-prc_index, ]
model.pca =train(income_above_50k ~ .,
data = train,
method = "rf",
metric = "ROC",
trControl = ctrl)
prc = bind_cols(select(income, income_above_50k), as.data.frame(pr_income$x)) %>%
select(1:6) %>%
rename("married_men" = PC1, "uneducated" = PC2, "pac_isl_immigrants" = PC3, "young_single"= PC4, "mexican_immigrants" = PC5)
prc = prc %>% mutate(income_above_50k = ifelse(income_above_50k == TRUE, "yes","no")
prc
prc = prc %>% mutate(income_above_50k = ifelse(income_above_50k == TRUE, "yes","no"))
prc
prc = prc %>% mutate(income_above_50k = ifelse(income_above_50k == TRUE, "yes","no")) %>% mutate(income_above_50k = as.factor(income_above_50k))
prc
prc = bind_cols(select(income, income_above_50k), as.data.frame(pr_income$x)) %>%
select(1:6) %>%
rename("married_men" = PC1, "uneducated" = PC2, "pac_isl_immigrants" = PC3, "young_single"= PC4, "mexican_immigrants" = PC5)
prc
prc
prc = prc %>% mutate(income_above_50k = factor(income_above_50k))
prc
ctrl <- trainControl(method = "cv", number = 3, classProbs = TRUE)
prc_index <- createDataPartition(prc$income_above_50k, p = 0.80, list = FALSE)
train <- prc[prc_index, ]
test <- prc[-prc_index, ]
model.pca =train(income_above_50k ~ .,
data = train,
method = "rf",
metric = "ROC",
trControl = ctrl)
prc = bind_cols(select(income, income_above_50k), as.data.frame(pr_income$x)) %>%
select(1:6) %>%
rename("married_men" = PC1, "uneducated" = PC2, "pac_isl_immigrants" = PC3, "young_single"= PC4, "mexican_immigrants" = PC5)
prc = prc %>% mutate(income_above_50k = ifelse(income_above_50k == TRUE, "y", "n"))
prc
prc %>% mutate(income_above_50k = as.factor(income_above_50k))
prc = prc %>% mutate(income_above_50k = as.factor(income_above_50k))
ctrl <- trainControl(method = "cv", number = 3, classProbs = TRUE)
prc_index <- createDataPartition(prc$income_above_50k, p = 0.80, list = FALSE)
train <- prc[prc_index, ]
test <- prc[-prc_index, ]
model.pca =train(income_above_50k ~ .,
data = train,
method = "rf",
metric = "ROC",
trControl = ctrl)
model.pca
prc
importance = varImp(model.pca)
plot(importance)
load("C:/Users/karol/Desktop/Machine Learning/ml-model3/.RData")
